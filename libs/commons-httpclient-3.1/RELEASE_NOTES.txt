Release 3.1 Final
-------------------

New features:
-------------------

(1) HTTP state management
 
 * RFC 2965 cookie specification support

-------------------
Changes since 3.1 RC 1

* [HTTPCLIENT-679] - Fixed RFC3986 compliance problem in URI absolutization
           code.
           Contributed by Jeff Dalton <jeffdalton104 at hotmail dot>

* [HTTPCLIENT-676] - Fixed memory leak in MultiThreadedHttpConnectionManager.
           Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-675] - Fixed potential race condition in MultiThreadedHttpConnectionManager.
           Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-665] - Internal collections of HttpState visible to subclasses.
           Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-651] - Improved API Doc regarding response buffering.
           Contributed by Ortwin Glueck <oglueck at apache.org>

* [HTTPCLIENT-645] - Cookie#compare() changed to do a simple case-sensitive string comparison 
           when comparing path attributes instead of using a static instance of RuleBasedCollator
           Contributed by Oleg Kalnichevski <olegk at apache.org>
* [HTTPCLIENT-650] - Wire log for headers written one by one while parsing
           instead of all at once afterwards, which fails on parse errors.
           Contributed by Roland Weber <rolandw at apache.org>

API changes since release 3.0.1
-------------------
Class added: 
  public org.apache.commons.httpclient.HttpContentTooLargeException extends org.apache.commons.httpclient.HttpException
Class added: 
  public org.apache.commons.httpclient.InvalidRedirectLocationException extends org.apache.commons.httpclient.RedirectException
Class added: 
  public org.apache.commons.httpclient.cookie.Cookie2 extends org.apache.commons.httpclient.Cookie
Class added: 
  public abstract org.apache.commons.httpclient.cookie.CookieAttributeHandler extends java.lang.Object
Class added: 
  public final org.apache.commons.httpclient.cookie.CookieOrigin extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.cookie.CookiePathComparator extends java.lang.Object implements java.util.Comparator
Class added: 
  public abstract org.apache.commons.httpclient.cookie.CookieVersionSupport extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.cookie.RFC2965Spec extends org.apache.commons.httpclient.cookie.CookieSpecBase implements org.apache.commons.httpclient.cookie.CookieVersionSupport
Class added: 
  public org.apache.commons.httpclient.methods.FileRequestEntity extends java.lang.Object implements org.apache.commons.httpclient.methods.RequestEntity
Class changed: org.apache.commons.httpclient.ConnectMethod
  Methods added:
    public ConnectMethod(org.apache.commons.httpclient.HostConfiguration);
    public java.lang.String getPath();
    public org.apache.commons.httpclient.URI getURI() throws org.apache.commons.httpclient.URIException;

  Method changed:
  old:
    public ConnectMethod();

  new:
    deprecated: public ConnectMethod();

Class changed: org.apache.commons.httpclient.ContentLengthInputStream
  Methods added:
    public int available() throws java.io.IOException;

Class changed: org.apache.commons.httpclient.HttpHost
  Method changed:
  old:
    public java.lang.Object clone();

  new:
    public java.lang.Object clone() throws java.lang.CloneNotSupportedException;

Class changed: org.apache.commons.httpclient.HttpMethodBase
  Methods added:
    public byte[] getResponseBody(int) throws java.io.IOException;
    public java.lang.String getResponseBodyAsString(int) throws java.io.IOException;
    protected void processCookieHeaders(org.apache.commons.httpclient.cookie.CookieSpec, org.apache.commons.httpclient.Header[], org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection);

  Fields added:
    protected org.apache.commons.httpclient.HttpVersion effectiveVersion;
    protected org.apache.commons.httpclient.StatusLine statusLine;

Class changed: org.apache.commons.httpclient.HttpState
  Fields added:
    protected java.util.ArrayList cookies;
    protected java.util.HashMap credMap;
    protected java.util.HashMap proxyCred;

Class changed: org.apache.commons.httpclient.ProxyHost
  Method changed:
  old:
    public java.lang.Object clone();

  new:
    public java.lang.Object clone() throws java.lang.CloneNotSupportedException;

Class changed: org.apache.commons.httpclient.SimpleHttpConnectionManager
  Methods added:
    public SimpleHttpConnectionManager(boolean);
    public void shutdown();

Class changed: org.apache.commons.httpclient.URI
  Methods removed:
    protected void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    protected void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;

  Method changed:
  old:
    public synchronized java.lang.Object clone();

  new:
    public synchronized java.lang.Object clone() throws java.lang.CloneNotSupportedException;

  Field changed:
  old:
    protected static char[] rootPath;

  new:
    protected final static char[] rootPath;

Class changed: org.apache.commons.httpclient.auth.AuthSchemeBase
  Methods removed:
    deprecated: public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    deprecated: public abstract java.lang.String getID();
    public abstract java.lang.String getParameter(java.lang.String);
    public abstract java.lang.String getRealm();
    public abstract java.lang.String getSchemeName();
    public abstract boolean isComplete();
    public abstract boolean isConnectionBased();
    public abstract void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

Class changed: org.apache.commons.httpclient.auth.RFC2617Scheme
  Methods removed:
    deprecated: public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public abstract java.lang.String getSchemeName();
    public abstract boolean isComplete();
    public abstract boolean isConnectionBased();

Class changed: org.apache.commons.httpclient.cookie.CookiePolicy
  Methods added:
    public static java.lang.String[] getRegisteredCookieSpecs();

  Fields added:
    deprecated: public final static int RFC2965 = 3;
    public final static java.lang.String RFC_2965 = rfc2965;

Class changed: org.apache.commons.httpclient.cookie.RFC2109Spec
  Fields added:
    public final static java.lang.String SET_COOKIE_KEY = set-cookie;

Class changed: org.apache.commons.httpclient.methods.StringRequestEntity
  Method changed:
  old:
    public StringRequestEntity(java.lang.String);

  new:
    deprecated: public StringRequestEntity(java.lang.String);

Class changed: org.apache.commons.httpclient.params.HttpMethodParams
  Methods added:
    public java.lang.String getUriCharset();
    public void setUriCharset(java.lang.String);

  Fields added:
    public final static java.lang.String HTTP_URI_CHARSET = http.protocol.uri-charset;

Class changed: org.apache.commons.httpclient.util.IdleConnectionTimeoutThread
  Methods added:
    protected void handleCloseIdleConnections(org.apache.commons.httpclient.HttpConnectionManager);

API diff generated by JarDiff http://www.osjava.org/jardiff/
-------------------

Release 3.1 RC 1  
-------------------
Changes since Release 3.1 Beta1:

* [HTTPCLIENT-641] - Resource Leakage when loading keystore in AuthSSLProtocolSocketFactory.
           Contributed by Hanson Char

* [HTTPCLIENT-634] - Default host config can override scheme of absolute URL.
           Contributed by John Kristian

* [HTTPCLIENT-633] - Changed MultiThreadedHttpConnectionManager's handling of thread 
           interrupts. IllegalThreadStateException is now thrown when waiting threads
           are interrupted from outside of the connection manager.
           Contributed by Michael Becke <mbecke at apache.org>

* [HTTPCLIENT-628] - IOException in AutoCloseInputStream.available()
           Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-625] - revised shutdown of MultiThreadedHttpConnectionManager
           Contributed by Roland Weber <rolandw at apache.org>

* [HTTPCLIENT-622] - Leak in MultiThreadedHttpConnectionManager.ConnectionPool.mapHosts
           Contributed by Michael Becke <mbecke at apache.org> and Ortwin Glueck <oglueck at apache.org>

* [HTTPCLIENT-612] - FileRequestEntity now always closes the input file.
           Contributed by Sebastian Bazley <sebb at apache.org>

* [HTTPCLIENT-616] - HttpMethodDirector.executeWithRetry method fixed to close 
           the underlying connection if a RuntimeException is thrown
           Contributed by Jason Bird

* [HTTPCLIENT-606] - Added a HTTP method level parameter for URI charset
           Contributed by Oleg Kalnichevski <olegk at apache.org>

* [HTTPCLIENT-610] - Added for convenience HttpMethodBase.getResponseBodyAsString(int)
           Contributed by Ortwin Glueck <oglueck at apache.org>

Release 3.1 Alpha 1
-------------------
Changes since Release 3.0.1:

 * [HTTPCLIENT-588] - Fixed parsing of relative URIs with internal double-slashes ('//')
           Contributed by Gordon Mohr <gojomo at archive.org>
           
 * [HTTPCLIENT-587] - Fixed incorrect derelativizing of relative URIs with a scheme
           Contributed by Gordon Mohr <gojomo at archive.org>
           
 * [HTTPCLIENT-494] - Invalid redirect location now causes a protocol exception
           Contributed by Oleg Kalnichevski <olegk at apache.org>
           
 * [HTTPCLIENT-582] - Allow access to registered cookie policies
           Contributed by Sebastian Bazley <sebb at apache.org>

 * [HTTPCLIENT-189] - Added support for Set-Cookie2 response headers
           Contributed by Samit Jain <jain.samit at gmail.com>

 * [HTTPCLIENT-66] - Implemented RFC 2965 cookie spec (Cookie2); Added support for port 
           sensitive cookies
           Contributed by Samit Jain <jain.samit at gmail.com>

 * [HTTPCLIENT-506] - Digest auth scheme now uses correct digest uri in HTTP CONNECT 
           requests
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * [HTTPCLIENT-570] - Failed CONNECT no longer leaves connection in an inconsistent state
           Contributed by Oleg Kalnichevski <olegk at apache.org>

Release 3.0.1
-------------------
Changes since Release 3.0:

 * 38636 - Calling HttpState.clearCookies() is now safe from a different thread.
           Contributed by Peter Dolberg <observewisdom at yahoo.com>

 * 38385 - Fixed NPE when creating URI from scheme specific part with null fragment
           Contributed by Michele Vivoda <vivodamichele at hotmail.com>

 * 38043 - Digest URI changed to include query parameters
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 38004 - Fixed bug causing cyclic redirects when virtual host is set
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 38139 - Calling deprecated MultiThreadedHttpConnectionManager.setMaxTotalConnections(int) 
           had no effect
           Contributed by Ortwin Glueck <oglueck at apache.org>

 * 37988 - Fixed bug in URI#toString() causing user name / password to 
           stripped from the resultant String
           Contributed by Oleg Kalnichevski <olegk at apache.org>

Release 3.0 
-------------------
New features:
-------------------

(1) Architecture

 * New preference architecture

 * Improved exception handling framework

 * Granular non-standards configuration and tracking
 
 * Improved HTTP Version configuration and tracking
 
 * Support for streaming entities

 * Support for tunneled HTTP proxies via the ProxyClient

 * Ability to abort execution of HTTP methods

(2) Connection management

 * Support for closing idle connections

 * Support for JDK1.4 connect timeout through reflection

 * Support for connection manager shutdown
 
(3) Authentication

 * Improved authentication framework

 * Plug-in mechanism for authentication modules
 
 * Interactive authentication support
 
 * Alternate authentication support

(4) Cookie management

 * Cookie specification plug-in mechanism

 * 'Ignore cookies' cookie policy

 * Improved Netscape cookie support

(5) Redirects

 * Cross-site redirect support

-------------------
API changes since 2.0

Class removed: 
  deprecated: public org.apache.commons.httpclient.Authenticator extends java.lang.Object
Class removed: 
  public org.apache.commons.httpclient.HttpConnection.ConnectionTimeoutException extends java.io.IOException
Class removed: 
  deprecated: public abstract org.apache.commons.httpclient.HttpUrlMethod extends java.lang.Object implements org.apache.commons.httpclient.HttpMethod
Class removed: 
  deprecated: public final org.apache.commons.httpclient.NTLM extends java.lang.Object
Class removed: 
  deprecated: public org.apache.commons.httpclient.RequestOutputStream extends java.io.OutputStream
Class removed: 
  deprecated: public org.apache.commons.httpclient.ResponseInputStream extends java.io.InputStream
Class removed: 
  deprecated: public org.apache.commons.httpclient.methods.UrlDeleteMethod extends org.apache.commons.httpclient.methods.DeleteMethod implements org.apache.commons.httpclient.HttpUrlMethod
Class removed: 
  deprecated: public org.apache.commons.httpclient.methods.UrlGetMethod extends org.apache.commons.httpclient.methods.GetMethod implements org.apache.commons.httpclient.HttpUrlMethod
Class removed: 
  deprecated: public org.apache.commons.httpclient.methods.UrlHeadMethod extends org.apache.commons.httpclient.methods.HeadMethod implements org.apache.commons.httpclient.HttpUrlMethod
Class removed: 
  deprecated: public org.apache.commons.httpclient.methods.UrlOptionsMethod extends org.apache.commons.httpclient.methods.OptionsMethod implements org.apache.commons.httpclient.HttpUrlMethod
Class removed: 
  deprecated: public org.apache.commons.httpclient.methods.UrlPostMethod extends org.apache.commons.httpclient.methods.PostMethod implements org.apache.commons.httpclient.HttpUrlMethod
Class removed: 
  deprecated: public org.apache.commons.httpclient.methods.UrlPutMethod extends org.apache.commons.httpclient.methods.PutMethod implements org.apache.commons.httpclient.HttpUrlMethod
Class removed: 
  deprecated: public final org.apache.commons.httpclient.util.Base64 extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.CircularRedirectException extends org.apache.commons.httpclient.RedirectException
Class added: 
  public org.apache.commons.httpclient.ConnectTimeoutException extends java.io.InterruptedIOException
Class added: 
  public org.apache.commons.httpclient.ConnectionPoolTimeoutException extends org.apache.commons.httpclient.ConnectTimeoutException
Class added: 
  public org.apache.commons.httpclient.DefaultHttpMethodRetryHandler extends java.lang.Object implements org.apache.commons.httpclient.HttpMethodRetryHandler
Class added: 
  public org.apache.commons.httpclient.HttpClientError extends java.lang.Error
Class added: 
  public org.apache.commons.httpclient.HttpHost extends java.lang.Object implements java.lang.Cloneable
Class added: 
  public abstract org.apache.commons.httpclient.HttpMethodRetryHandler extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.HttpVersion extends java.lang.Object implements java.lang.Comparable
Class added: 
  public org.apache.commons.httpclient.NoHttpResponseException extends java.io.IOException
Class added: 
  public org.apache.commons.httpclient.ProtocolException extends org.apache.commons.httpclient.HttpException
Class added: 
  public org.apache.commons.httpclient.ProxyClient extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.ProxyClient.ConnectResponse extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.ProxyHost extends org.apache.commons.httpclient.HttpHost
Class added: 
  public org.apache.commons.httpclient.RedirectException extends org.apache.commons.httpclient.ProtocolException
Class added: 
  public org.apache.commons.httpclient.auth.AuthChallengeException extends org.apache.commons.httpclient.auth.AuthenticationException
Class added: 
  public final org.apache.commons.httpclient.auth.AuthChallengeProcessor extends java.lang.Object
Class added: 
  public abstract org.apache.commons.httpclient.auth.AuthPolicy extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.auth.AuthScope extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.auth.AuthState extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.auth.CredentialsNotAvailableException extends org.apache.commons.httpclient.auth.AuthenticationException
Class added: 
  public abstract org.apache.commons.httpclient.auth.CredentialsProvider extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.auth.InvalidCredentialsException extends org.apache.commons.httpclient.auth.AuthenticationException
Class added: 
  public org.apache.commons.httpclient.cookie.IgnoreCookiesSpec extends java.lang.Object implements org.apache.commons.httpclient.cookie.CookieSpec
Class added: 
  public org.apache.commons.httpclient.methods.ByteArrayRequestEntity extends java.lang.Object implements org.apache.commons.httpclient.methods.RequestEntity
Class added: 
  public org.apache.commons.httpclient.methods.InputStreamRequestEntity extends java.lang.Object implements org.apache.commons.httpclient.methods.RequestEntity
Class added: 
  public abstract org.apache.commons.httpclient.methods.RequestEntity extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.methods.StringRequestEntity extends java.lang.Object implements org.apache.commons.httpclient.methods.RequestEntity
Class added: 
  public org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity extends java.lang.Object implements org.apache.commons.httpclient.methods.RequestEntity
Class added: 
  public org.apache.commons.httpclient.params.DefaultHttpParams extends java.lang.Object implements org.apache.commons.httpclient.params.HttpParams, java.io.Serializable, java.lang.Cloneable
Class added: 
  public org.apache.commons.httpclient.params.DefaultHttpParamsFactory extends java.lang.Object implements org.apache.commons.httpclient.params.HttpParamsFactory
Class added: 
  public org.apache.commons.httpclient.params.HostParams extends org.apache.commons.httpclient.params.DefaultHttpParams
Class added: 
  public org.apache.commons.httpclient.params.HttpClientParams extends org.apache.commons.httpclient.params.HttpMethodParams
Class added: 
  public org.apache.commons.httpclient.params.HttpConnectionManagerParams extends org.apache.commons.httpclient.params.HttpConnectionParams
Class added: 
  public org.apache.commons.httpclient.params.HttpConnectionParams extends org.apache.commons.httpclient.params.DefaultHttpParams
Class added: 
  public org.apache.commons.httpclient.params.HttpMethodParams extends org.apache.commons.httpclient.params.DefaultHttpParams
Class added: 
  public abstract org.apache.commons.httpclient.params.HttpParams extends java.lang.Object
Class added: 
  public abstract org.apache.commons.httpclient.params.HttpParamsFactory extends java.lang.Object
Class added: 
  public final org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory extends java.lang.Object
Class added: 
  public abstract org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory.SocketTask extends java.lang.Object implements java.lang.Runnable
Class added: 
  public final org.apache.commons.httpclient.protocol.ReflectionSocketFactory extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.util.DateUtil extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.util.ExceptionUtil extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.util.IdleConnectionHandler extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.util.IdleConnectionTimeoutThread extends java.lang.Thread
Class added: 
  public org.apache.commons.httpclient.util.LangUtils extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.util.ParameterFormatter extends java.lang.Object
Class added: 
  public org.apache.commons.httpclient.util.ParameterParser extends java.lang.Object
Class changed: org.apache.commons.httpclient.ChunkedInputStream
  Methods added:
    public ChunkedInputStream(java.io.InputStream) throws java.io.IOException;

Class changed: org.apache.commons.httpclient.ChunkedOutputStream
  Methods removed:
    public void print(java.lang.String) throws java.io.IOException;
    public void println() throws java.io.IOException;
    public void println(java.lang.String) throws java.io.IOException;

  Methods added:
    public ChunkedOutputStream(java.io.OutputStream, int) throws java.io.IOException;
    public void finish() throws java.io.IOException;
    protected void flushCache() throws java.io.IOException;
    protected void flushCacheWithAppend(byte[], int, int) throws java.io.IOException;
    public void write(byte[]) throws java.io.IOException;

  Method changed:
  old:
    public ChunkedOutputStream(java.io.OutputStream);

  new:
    public ChunkedOutputStream(java.io.OutputStream) throws java.io.IOException;

  Method changed:
  old:
    public void write(int) throws java.io.IOException, java.lang.IllegalStateException;

  new:
    public void write(int) throws java.io.IOException;

  Method changed:
  old:
    public void writeClosingChunk() throws java.io.IOException;

  new:
    protected void writeClosingChunk() throws java.io.IOException;

Class changed: org.apache.commons.httpclient.ConnectMethod
  Methods removed:
    protected void addAuthorizationRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;

  Methods added:
    public ConnectMethod();

  Method changed:
  old:
    public ConnectMethod(org.apache.commons.httpclient.HttpMethod);

  new:
    deprecated: public ConnectMethod(org.apache.commons.httpclient.HttpMethod);

Class changed: org.apache.commons.httpclient.ContentLengthInputStream
  Methods added:
    public ContentLengthInputStream(java.io.InputStream, long);

  Method changed:
  old:
    public ContentLengthInputStream(java.io.InputStream, int);

  new:
    deprecated: public ContentLengthInputStream(java.io.InputStream, int);

Class changed: org.apache.commons.httpclient.Cookie
  Methods removed:
    deprecated: public static org.apache.commons.httpclient.Header createCookieHeader(java.lang.String, int, java.lang.String, boolean, java.util.Date, org.apache.commons.httpclient.Cookie[]) throws java.lang.IllegalArgumentException;
    deprecated: public static org.apache.commons.httpclient.Header createCookieHeader(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie[]) throws java.lang.IllegalArgumentException;
    deprecated: public static org.apache.commons.httpclient.Header createCookieHeader(java.lang.String, java.lang.String, boolean, org.apache.commons.httpclient.Cookie[]) throws java.lang.IllegalArgumentException;
    deprecated: public static org.apache.commons.httpclient.Header createCookieHeader(java.lang.String, java.lang.String, org.apache.commons.httpclient.Cookie[]);
    deprecated: public boolean matches(java.lang.String, int, java.lang.String, boolean);
    deprecated: public boolean matches(java.lang.String, int, java.lang.String, boolean, java.util.Date);
    deprecated: public static org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, org.apache.commons.httpclient.Header) throws org.apache.commons.httpclient.HttpException, java.lang.IllegalArgumentException;
    deprecated: public static org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Header) throws org.apache.commons.httpclient.HttpException;
    deprecated: public static org.apache.commons.httpclient.Cookie[] parse(java.lang.String, java.lang.String, org.apache.commons.httpclient.Header) throws org.apache.commons.httpclient.HttpException, java.lang.IllegalArgumentException;
    deprecated: public static org.apache.commons.httpclient.Cookie[] parse(java.lang.String, java.lang.String, boolean, org.apache.commons.httpclient.Header) throws org.apache.commons.httpclient.HttpException, java.lang.IllegalArgumentException;

Class changed: org.apache.commons.httpclient.DefaultMethodRetryHandler
  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.DefaultMethodRetryHandler extends java.lang.Object implements org.apache.commons.httpclient.MethodRetryHandler
  new:
    deprecated: public org.apache.commons.httpclient.DefaultMethodRetryHandler extends java.lang.Object implements org.apache.commons.httpclient.MethodRetryHandler
Class changed: org.apache.commons.httpclient.Header
  Methods added:
    public Header(java.lang.String, java.lang.String, boolean);
    public org.apache.commons.httpclient.HeaderElement[] getElements();
    public boolean isAutogenerated();

  Method changed:
  old:
    public org.apache.commons.httpclient.HeaderElement[] getValues() throws org.apache.commons.httpclient.HttpException;

  new:
    deprecated: public org.apache.commons.httpclient.HeaderElement[] getValues() throws org.apache.commons.httpclient.HttpException;

Class changed: org.apache.commons.httpclient.HeaderElement
  Methods removed:
    protected void setParameters(org.apache.commons.httpclient.NameValuePair[]);

  Methods added:
    public HeaderElement(char[]);
    public HeaderElement(char[], int, int);
    public final static org.apache.commons.httpclient.HeaderElement[] parseElements(java.lang.String);
    public final static org.apache.commons.httpclient.HeaderElement[] parseElements(char[]);

  Method changed:
  old:
    public final static org.apache.commons.httpclient.HeaderElement[] parse(java.lang.String) throws org.apache.commons.httpclient.HttpException;

  new:
    deprecated: public final static org.apache.commons.httpclient.HeaderElement[] parse(java.lang.String) throws org.apache.commons.httpclient.HttpException;

Class changed: org.apache.commons.httpclient.HeaderGroup
  Methods added:
    public java.util.Iterator getIterator();

Class changed: org.apache.commons.httpclient.HostConfiguration
  Methods added:
    public org.apache.commons.httpclient.params.HostParams getParams();
    public synchronized void setHost(org.apache.commons.httpclient.HttpHost);
    public void setParams(org.apache.commons.httpclient.params.HostParams);
    public synchronized void setProxyHost(org.apache.commons.httpclient.ProxyHost);

  Fields added:
    public final static org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION;

  Method changed:
  old:
    public synchronized java.lang.String getVirtualHost();

  new:
    deprecated: public synchronized java.lang.String getVirtualHost();

  Method changed:
  old:
    public int hashCode();

  new:
    public synchronized int hashCode();

  Method changed:
  old:
    public synchronized boolean isHostSet();

  new:
    deprecated: public synchronized boolean isHostSet();

  Method changed:
  old:
    public synchronized boolean isProxySet();

  new:
    deprecated: public synchronized boolean isProxySet();

  Method changed:
  old:
    public synchronized void setHost(java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);

  new:
    deprecated: public synchronized void setHost(java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);

Class changed: org.apache.commons.httpclient.HttpClient
  Methods removed:
    deprecated: public void endSession() throws java.io.IOException;
    deprecated: public void startSession(java.lang.String, int);
    deprecated: public void startSession(java.lang.String, int, java.lang.String, int);
    deprecated: public void startSession(java.lang.String, int, java.lang.String, int, boolean);
    deprecated: public void startSession(java.lang.String, int, org.apache.commons.httpclient.Credentials);
    deprecated: public void startSession(java.lang.String, int, org.apache.commons.httpclient.Credentials, boolean);
    deprecated: public void startSession(java.lang.String, int, boolean);
    deprecated: public void startSession(java.net.URL) throws java.lang.IllegalArgumentException;
    deprecated: public void startSession(java.net.URL, org.apache.commons.httpclient.Credentials) throws java.lang.IllegalArgumentException;
    deprecated: public void startSession(org.apache.commons.httpclient.URI) throws org.apache.commons.httpclient.URIException, java.lang.IllegalStateException;

  Methods added:
    public HttpClient(org.apache.commons.httpclient.params.HttpClientParams);
    public HttpClient(org.apache.commons.httpclient.params.HttpClientParams, org.apache.commons.httpclient.HttpConnectionManager);
    public org.apache.commons.httpclient.params.HttpClientParams getParams();
    public void setParams(org.apache.commons.httpclient.params.HttpClientParams);

  Method changed:
  old:
    public synchronized boolean isStrictMode();

  new:
    deprecated: public synchronized boolean isStrictMode();

  Method changed:
  old:
    public synchronized void setConnectionTimeout(int);

  new:
    deprecated: public synchronized void setConnectionTimeout(int);

  Method changed:
  old:
    public synchronized void setHttpConnectionFactoryTimeout(long);

  new:
    deprecated: public synchronized void setHttpConnectionFactoryTimeout(long);

  Method changed:
  old:
    public synchronized void setStrictMode(boolean);

  new:
    deprecated: public synchronized void setStrictMode(boolean);

  Method changed:
  old:
    public synchronized void setTimeout(int);

  new:
    deprecated: public synchronized void setTimeout(int);

Class changed: org.apache.commons.httpclient.HttpConnection
  Methods removed:
    deprecated: public HttpConnection(java.lang.String, int, java.lang.String, int, boolean);
    deprecated: public HttpConnection(java.lang.String, int, boolean);
    deprecated: public java.io.OutputStream getRequestOutputStream(boolean) throws java.io.IOException, java.lang.IllegalStateException;
    deprecated: public java.io.InputStream getResponseInputStream(org.apache.commons.httpclient.HttpMethod) throws java.io.IOException, java.lang.IllegalStateException;
    deprecated: public void setSecure(boolean) throws java.lang.IllegalStateException;

  Methods added:
    public HttpConnection(java.lang.String, int, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);
    public boolean closeIfStale() throws java.io.IOException;
    public org.apache.commons.httpclient.params.HttpConnectionParams getParams();
    protected java.net.Socket getSocket();
    protected boolean isLocked();
    public void print(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    public void printLine(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    public java.lang.String readLine(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;
    protected void setLocked(boolean);
    public void setParams(org.apache.commons.httpclient.params.HttpConnectionParams);
    public void setSocketTimeout(int) throws java.net.SocketException, java.lang.IllegalStateException;

  Method changed:
  old:
    public HttpConnection(java.lang.String, int, java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);

  new:
    deprecated: public HttpConnection(java.lang.String, int, java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol);

  Method changed:
  old:
    public int getSoTimeout() throws java.net.SocketException;

  new:
    deprecated: public int getSoTimeout() throws java.net.SocketException;

  Method changed:
  old:
    public java.lang.String getVirtualHost();

  new:
    deprecated: public java.lang.String getVirtualHost();

  Method changed:
  old:
    protected boolean isStale();

  new:
    protected boolean isStale() throws java.io.IOException;

  Method changed:
  old:
    public boolean isStaleCheckingEnabled();

  new:
    deprecated: public boolean isStaleCheckingEnabled();

  Method changed:
  old:
    public void print(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException, org.apache.commons.httpclient.HttpRecoverableException;

  new:
    deprecated: public void print(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;

  Method changed:
  old:
    public void printLine() throws java.io.IOException, java.lang.IllegalStateException, org.apache.commons.httpclient.HttpRecoverableException;

  new:
    public void printLine() throws java.io.IOException, java.lang.IllegalStateException;

  Method changed:
  old:
    public void printLine(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException, org.apache.commons.httpclient.HttpRecoverableException;

  new:
    deprecated: public void printLine(java.lang.String) throws java.io.IOException, java.lang.IllegalStateException;

  Method changed:
  old:
    public java.lang.String readLine() throws java.io.IOException, java.lang.IllegalStateException;

  new:
    deprecated: public java.lang.String readLine() throws java.io.IOException, java.lang.IllegalStateException;

  Method changed:
  old:
    public void setConnectionTimeout(int);

  new:
    deprecated: public void setConnectionTimeout(int);

  Method changed:
  old:
    public void setSendBufferSize(int) throws java.net.SocketException;

  new:
    deprecated: public void setSendBufferSize(int) throws java.net.SocketException;

  Method changed:
  old:
    public void setSoTimeout(int) throws java.net.SocketException, java.lang.IllegalStateException;

  new:
    deprecated: public void setSoTimeout(int) throws java.net.SocketException, java.lang.IllegalStateException;

  Method changed:
  old:
    public void setStaleCheckingEnabled(boolean);

  new:
    deprecated: public void setStaleCheckingEnabled(boolean);

  Method changed:
  old:
    public void setVirtualHost(java.lang.String) throws java.lang.IllegalStateException;

  new:
    deprecated: public void setVirtualHost(java.lang.String) throws java.lang.IllegalStateException;

  Method changed:
  old:
    public void shutdownOutput();

  new:
    deprecated: public void shutdownOutput();

  Method changed:
  old:
    public void write(byte[]) throws java.io.IOException, java.lang.IllegalStateException, org.apache.commons.httpclient.HttpRecoverableException;

  new:
    public void write(byte[]) throws java.io.IOException, java.lang.IllegalStateException;

  Method changed:
  old:
    public void write(byte[], int, int) throws java.io.IOException, java.lang.IllegalStateException, org.apache.commons.httpclient.HttpRecoverableException;

  new:
    public void write(byte[], int, int) throws java.io.IOException, java.lang.IllegalStateException;

  Method changed:
  old:
    public void writeLine() throws java.io.IOException, java.lang.IllegalStateException, org.apache.commons.httpclient.HttpRecoverableException;

  new:
    public void writeLine() throws java.io.IOException, java.lang.IllegalStateException;

  Method changed:
  old:
    public void writeLine(byte[]) throws java.io.IOException, java.lang.IllegalStateException, org.apache.commons.httpclient.HttpRecoverableException;

  new:
    public void writeLine(byte[]) throws java.io.IOException, java.lang.IllegalStateException;

Class changed: org.apache.commons.httpclient.HttpConnectionManager
  Methods added:
    public abstract void closeIdleConnections(long);
    public abstract org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.ConnectionPoolTimeoutException;
    public abstract org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams();
    public abstract void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams);

  Method changed:
  old:
    public abstract org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.HttpException;

  new:
    deprecated: public abstract org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.HttpException;

Class changed: org.apache.commons.httpclient.HttpConstants
  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.HttpConstants extends java.lang.Object
  new:
    deprecated: public org.apache.commons.httpclient.HttpConstants extends java.lang.Object
Class changed: org.apache.commons.httpclient.HttpException
  Methods added:
    public HttpException(java.lang.String, java.lang.Throwable);
    public java.lang.Throwable getCause();
    deprecated: public java.lang.String getReason();
    deprecated: public int getReasonCode();
    public void printStackTrace();
    public void printStackTrace(java.io.PrintStream);
    public void printStackTrace(java.io.PrintWriter);
    deprecated: public void setReason(java.lang.String);
    deprecated: public void setReasonCode(int);

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.HttpException extends org.apache.commons.httpclient.URIException
  new:
    public org.apache.commons.httpclient.HttpException extends java.io.IOException
Class changed: org.apache.commons.httpclient.HttpMethod
  Methods added:
    public abstract void abort();
    public abstract org.apache.commons.httpclient.auth.AuthState getHostAuthState();
    public abstract org.apache.commons.httpclient.params.HttpMethodParams getParams();
    public abstract org.apache.commons.httpclient.auth.AuthState getProxyAuthState();
    public abstract org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String);
    public abstract org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String);
    public abstract boolean isRequestSent();
    public abstract void removeRequestHeader(org.apache.commons.httpclient.Header);
    public abstract void setParams(org.apache.commons.httpclient.params.HttpMethodParams);
    public abstract void setURI(org.apache.commons.httpclient.URI) throws org.apache.commons.httpclient.URIException;

  Method changed:
  old:
    public abstract org.apache.commons.httpclient.HostConfiguration getHostConfiguration();

  new:
    deprecated: public abstract org.apache.commons.httpclient.HostConfiguration getHostConfiguration();

  Method changed:
  old:
    public abstract byte[] getResponseBody();

  new:
    public abstract byte[] getResponseBody() throws java.io.IOException;

  Method changed:
  old:
    public abstract java.lang.String getResponseBodyAsString();

  new:
    public abstract java.lang.String getResponseBodyAsString() throws java.io.IOException;

  Method changed:
  old:
    public abstract boolean isStrictMode();

  new:
    deprecated: public abstract boolean isStrictMode();

  Method changed:
  old:
    public abstract void setStrictMode(boolean);

  new:
    deprecated: public abstract void setStrictMode(boolean);

Class changed: org.apache.commons.httpclient.HttpMethodBase
  Methods removed:
    protected void addAuthorizationRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected void addProxyAuthorizationRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected void fakeResponse(org.apache.commons.httpclient.StatusLine, org.apache.commons.httpclient.HeaderGroup, java.io.InputStream);
    protected int getRequestContentLength();
    protected int getResponseContentLength();

  Methods added:
    public void abort();
    public org.apache.commons.httpclient.HttpVersion getEffectiveVersion();
    public org.apache.commons.httpclient.auth.AuthState getHostAuthState();
    public org.apache.commons.httpclient.params.HttpMethodParams getParams();
    public org.apache.commons.httpclient.auth.AuthState getProxyAuthState();
    public org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String);
    public long getResponseContentLength();
    public org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String);
    public boolean isAborted();
    public boolean isRequestSent();
    public void removeRequestHeader(org.apache.commons.httpclient.Header);
    public void setParams(org.apache.commons.httpclient.params.HttpMethodParams);
    public void setURI(org.apache.commons.httpclient.URI) throws org.apache.commons.httpclient.URIException;

  Fields removed:
    protected final static org.apache.commons.httpclient.Header USER_AGENT;

  Method changed:
  old:
    public int execute(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws org.apache.commons.httpclient.HttpException, org.apache.commons.httpclient.HttpRecoverableException, java.io.IOException;

  new:
    public int execute(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws org.apache.commons.httpclient.HttpException, java.io.IOException;

  Method changed:
  old:
    public java.lang.String getAuthenticationRealm();

  new:
    deprecated: public java.lang.String getAuthenticationRealm();

  Method changed:
  old:
    protected static java.lang.String getContentCharSet(org.apache.commons.httpclient.Header);

  new:
    protected java.lang.String getContentCharSet(org.apache.commons.httpclient.Header);

  Method changed:
  old:
    public org.apache.commons.httpclient.HostConfiguration getHostConfiguration();

  new:
    deprecated: public org.apache.commons.httpclient.HostConfiguration getHostConfiguration();

  Method changed:
  old:
    public org.apache.commons.httpclient.MethodRetryHandler getMethodRetryHandler();

  new:
    deprecated: public org.apache.commons.httpclient.MethodRetryHandler getMethodRetryHandler();

  Method changed:
  old:
    public java.lang.String getProxyAuthenticationRealm();

  new:
    deprecated: public java.lang.String getProxyAuthenticationRealm();

  Method changed:
  old:
    public int getRecoverableExceptionCount();

  new:
    deprecated: public int getRecoverableExceptionCount();

  Method changed:
  old:
    public byte[] getResponseBody();

  new:
    public byte[] getResponseBody() throws java.io.IOException;

  Method changed:
  old:
    public java.lang.String getResponseBodyAsString();

  new:
    public java.lang.String getResponseBodyAsString() throws java.io.IOException;

  Method changed:
  old:
    public boolean isHttp11();

  new:
    deprecated: public boolean isHttp11();

  Method changed:
  old:
    public boolean isStrictMode();

  new:
    deprecated: public boolean isStrictMode();

  Method changed:
  old:
    protected void readResponse(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws org.apache.commons.httpclient.HttpException;

  new:
    protected void readResponse(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;

  Method changed:
  old:
    protected void readStatusLine(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpRecoverableException, org.apache.commons.httpclient.HttpException;

  new:
    protected void readStatusLine(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;

  Method changed:
  old:
    public void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration);

  new:
    deprecated: public void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration);

  Method changed:
  old:
    public void setHttp11(boolean);

  new:
    deprecated: public void setHttp11(boolean);

  Method changed:
  old:
    public void setMethodRetryHandler(org.apache.commons.httpclient.MethodRetryHandler);

  new:
    deprecated: public void setMethodRetryHandler(org.apache.commons.httpclient.MethodRetryHandler);

  Method changed:
  old:
    public void setStrictMode(boolean);

  new:
    deprecated: public void setStrictMode(boolean);

Class changed: org.apache.commons.httpclient.HttpParser
  Methods added:
    public static org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream, java.lang.String) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    public static java.lang.String readLine(java.io.InputStream, java.lang.String) throws java.io.IOException;

  Method changed:
  old:
    public static org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream) throws java.io.IOException, org.apache.commons.httpclient.HttpException;

  new:
    deprecated: public static org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream) throws java.io.IOException, org.apache.commons.httpclient.HttpException;

  Method changed:
  old:
    public static java.lang.String readLine(java.io.InputStream) throws java.io.IOException;

  new:
    deprecated: public static java.lang.String readLine(java.io.InputStream) throws java.io.IOException;

Class changed: org.apache.commons.httpclient.HttpRecoverableException
  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.HttpRecoverableException extends org.apache.commons.httpclient.HttpException
  new:
    deprecated: public org.apache.commons.httpclient.HttpRecoverableException extends org.apache.commons.httpclient.HttpException
Class changed: org.apache.commons.httpclient.HttpState
  Methods removed:
    deprecated: public synchronized org.apache.commons.httpclient.Cookie[] getCookies(java.lang.String, int, java.lang.String, boolean, java.util.Date);
    deprecated: public synchronized org.apache.commons.httpclient.Credentials getCredentials(java.lang.String);
    deprecated: public synchronized org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager();
    deprecated: public synchronized org.apache.commons.httpclient.Credentials getProxyCredentials(java.lang.String);
    deprecated: public synchronized void setCredentials(java.lang.String, org.apache.commons.httpclient.Credentials);
    deprecated: public synchronized void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager);
    deprecated: public synchronized void setProxyCredentials(java.lang.String, org.apache.commons.httpclient.Credentials);

  Methods added:
    public void clear();
    public void clearCookies();
    public void clearCredentials();
    public void clearProxyCredentials();
    public synchronized org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScope);
    public synchronized org.apache.commons.httpclient.Credentials getProxyCredentials(org.apache.commons.httpclient.auth.AuthScope);
    public synchronized void setCredentials(org.apache.commons.httpclient.auth.AuthScope, org.apache.commons.httpclient.Credentials);
    public synchronized void setProxyCredentials(org.apache.commons.httpclient.auth.AuthScope, org.apache.commons.httpclient.Credentials);

  Fields removed:
    public final static org.apache.commons.httpclient.auth.HttpAuthRealm DEFAULT_AUTH_REALM;

  Method changed:
  old:
    public int getCookiePolicy();

  new:
    deprecated: public int getCookiePolicy();

  Method changed:
  old:
    public synchronized org.apache.commons.httpclient.Credentials getCredentials(java.lang.String, java.lang.String);

  new:
    deprecated: public synchronized org.apache.commons.httpclient.Credentials getCredentials(java.lang.String, java.lang.String);

  Method changed:
  old:
    public synchronized org.apache.commons.httpclient.Credentials getProxyCredentials(java.lang.String, java.lang.String);

  new:
    deprecated: public synchronized org.apache.commons.httpclient.Credentials getProxyCredentials(java.lang.String, java.lang.String);

  Method changed:
  old:
    public boolean isAuthenticationPreemptive();

  new:
    deprecated: public boolean isAuthenticationPreemptive();

  Method changed:
  old:
    public void setAuthenticationPreemptive(boolean);

  new:
    deprecated: public void setAuthenticationPreemptive(boolean);

  Method changed:
  old:
    public void setCookiePolicy(int);

  new:
    deprecated: public void setCookiePolicy(int);

  Method changed:
  old:
    public synchronized void setCredentials(java.lang.String, java.lang.String, org.apache.commons.httpclient.Credentials);

  new:
    deprecated: public synchronized void setCredentials(java.lang.String, java.lang.String, org.apache.commons.httpclient.Credentials);

  Method changed:
  old:
    public synchronized void setProxyCredentials(java.lang.String, java.lang.String, org.apache.commons.httpclient.Credentials);

  new:
    deprecated: public synchronized void setProxyCredentials(java.lang.String, java.lang.String, org.apache.commons.httpclient.Credentials);

Class changed: org.apache.commons.httpclient.MethodRetryHandler
  Class descriptor changed:
  old:
    public abstract org.apache.commons.httpclient.MethodRetryHandler extends java.lang.Object
  new:
    deprecated: public abstract org.apache.commons.httpclient.MethodRetryHandler extends java.lang.Object
Class changed: org.apache.commons.httpclient.MultiThreadedHttpConnectionManager
  Methods added:
    public void closeIdleConnections(long);
    public void deleteClosedConnections();
    public org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.ConnectionPoolTimeoutException;
    public int getConnectionsInPool();
    public int getConnectionsInPool(org.apache.commons.httpclient.HostConfiguration);
    public org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams();
    public void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams);

  Method changed:
  old:
    public org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.HttpException;

  new:
    deprecated: public org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration, long) throws org.apache.commons.httpclient.HttpException;

  Method changed:
  old:
    public int getConnectionsInUse();

  new:
    deprecated: public int getConnectionsInUse();

  Method changed:
  old:
    public int getConnectionsInUse(org.apache.commons.httpclient.HostConfiguration);

  new:
    deprecated: public int getConnectionsInUse(org.apache.commons.httpclient.HostConfiguration);

  Method changed:
  old:
    public int getMaxConnectionsPerHost();

  new:
    deprecated: public int getMaxConnectionsPerHost();

  Method changed:
  old:
    public int getMaxTotalConnections();

  new:
    deprecated: public int getMaxTotalConnections();

  Method changed:
  old:
    public boolean isConnectionStaleCheckingEnabled();

  new:
    deprecated: public boolean isConnectionStaleCheckingEnabled();

  Method changed:
  old:
    public void setConnectionStaleCheckingEnabled(boolean);

  new:
    deprecated: public void setConnectionStaleCheckingEnabled(boolean);

  Method changed:
  old:
    public void setMaxConnectionsPerHost(int);

  new:
    deprecated: public void setMaxConnectionsPerHost(int);

  Method changed:
  old:
    public void setMaxTotalConnections(int);

  new:
    deprecated: public void setMaxTotalConnections(int);

Class changed: org.apache.commons.httpclient.NTCredentials
  Methods added:
    public boolean equals(java.lang.Object);
    public int hashCode();

  Method changed:
  old:
    public NTCredentials();

  new:
    deprecated: public NTCredentials();

  Method changed:
  old:
    public void setDomain(java.lang.String);

  new:
    deprecated: public void setDomain(java.lang.String);

  Method changed:
  old:
    public void setHost(java.lang.String);

  new:
    deprecated: public void setHost(java.lang.String);

Class changed: org.apache.commons.httpclient.SimpleHttpConnectionManager
  Methods added:
    public void closeIdleConnections(long);
    public org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration, long);
    public org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams();
    public void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams);

  Fields added:
    protected org.apache.commons.httpclient.HttpConnection httpConnection;

  Method changed:
  old:
    public org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration, long);

  new:
    deprecated: public org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration, long);

  Method changed:
  old:
    public boolean isConnectionStaleCheckingEnabled();

  new:
    deprecated: public boolean isConnectionStaleCheckingEnabled();

  Method changed:
  old:
    public void setConnectionStaleCheckingEnabled(boolean);

  new:
    deprecated: public void setConnectionStaleCheckingEnabled(boolean);

Class changed: org.apache.commons.httpclient.URI
  Methods removed:
    deprecated: public URI(java.net.URL) throws org.apache.commons.httpclient.URIException;

  Methods added:
    public URI(java.lang.String, boolean) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException;
    public URI(java.lang.String, boolean, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException;
    public URI(org.apache.commons.httpclient.URI, java.lang.String, boolean) throws org.apache.commons.httpclient.URIException;
    protected static java.lang.String decode(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException;

  Method changed:
  old:
    public URI(java.lang.String) throws org.apache.commons.httpclient.URIException;

  new:
    deprecated: public URI(java.lang.String) throws org.apache.commons.httpclient.URIException;

  Method changed:
  old:
    public URI(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException;

  new:
    deprecated: public URI(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException;

  Method changed:
  old:
    public URI(org.apache.commons.httpclient.URI, java.lang.String) throws org.apache.commons.httpclient.URIException;

  new:
    deprecated: public URI(org.apache.commons.httpclient.URI, java.lang.String) throws org.apache.commons.httpclient.URIException;

  Method changed:
  old:
    public URI(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException;

  new:
    deprecated: public URI(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException;

  Method changed:
  old:
    public URI(char[], java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException;

  new:
    deprecated: public URI(char[], java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException;

Class changed: org.apache.commons.httpclient.URIException
  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.URIException extends java.io.IOException
  new:
    public org.apache.commons.httpclient.URIException extends org.apache.commons.httpclient.HttpException
  Method changed:
  old:
    public java.lang.String getReason();

  new:
    deprecated: public java.lang.String getReason();

  Method changed:
  old:
    public void setReason(java.lang.String);

  new:
    deprecated: public void setReason(java.lang.String);

  Method changed:
  old:
    public void setReasonCode(int);

  new:
    deprecated: public void setReasonCode(int);

Class changed: org.apache.commons.httpclient.UsernamePasswordCredentials
  Methods added:
    public boolean equals(java.lang.Object);
    public int hashCode();

  Method changed:
  old:
    public UsernamePasswordCredentials();

  new:
    deprecated: public UsernamePasswordCredentials();

  Method changed:
  old:
    public void setPassword(java.lang.String);

  new:
    deprecated: public void setPassword(java.lang.String);

  Method changed:
  old:
    public void setUserName(java.lang.String);

  new:
    deprecated: public void setUserName(java.lang.String);

Class changed: org.apache.commons.httpclient.auth.AuthChallengeParser
  Methods added:
    public static java.util.Map parseChallenges(org.apache.commons.httpclient.Header[]) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

Class changed: org.apache.commons.httpclient.auth.AuthScheme
  Methods added:
    public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public abstract boolean isComplete();
    public abstract boolean isConnectionBased();
    public abstract void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Method changed:
  old:
    public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public abstract java.lang.String getID();

  new:
    deprecated: public abstract java.lang.String getID();

Class changed: org.apache.commons.httpclient.auth.AuthSchemeBase
  Methods added:
    public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public abstract boolean isComplete();
    public abstract boolean isConnectionBased();
    public abstract void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Class descriptor changed:
  old:
    public abstract org.apache.commons.httpclient.auth.AuthSchemeBase extends java.lang.Object implements org.apache.commons.httpclient.auth.AuthScheme
  new:
    deprecated: public abstract org.apache.commons.httpclient.auth.AuthSchemeBase extends java.lang.Object implements org.apache.commons.httpclient.auth.AuthScheme
  Method changed:
  old:
    public AuthSchemeBase(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  new:
    deprecated: public AuthSchemeBase(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Method changed:
  old:
    public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public abstract java.lang.String getID();

  new:
    deprecated: public abstract java.lang.String getID();

Class changed: org.apache.commons.httpclient.auth.AuthenticationException
  Methods added:
    public AuthenticationException(java.lang.String, java.lang.Throwable);

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.auth.AuthenticationException extends org.apache.commons.httpclient.HttpException
  new:
    public org.apache.commons.httpclient.auth.AuthenticationException extends org.apache.commons.httpclient.ProtocolException
Class changed: org.apache.commons.httpclient.auth.BasicScheme
  Methods added:
    public BasicScheme();
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public static java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials, java.lang.String);
    public boolean isComplete();
    public boolean isConnectionBased();
    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Method changed:
  old:
    public BasicScheme(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  new:
    deprecated: public BasicScheme(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Method changed:
  old:
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public static java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials);

  new:
    deprecated: public static java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials);

Class changed: org.apache.commons.httpclient.auth.DigestScheme
  Methods removed:
    public static java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials, java.util.Map) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public static java.lang.String createDigest(java.lang.String, java.lang.String, java.util.Map) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public static java.lang.String createDigestHeader(java.lang.String, java.util.Map, java.lang.String);

  Methods added:
    public DigestScheme();
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public boolean isComplete();
    public boolean isConnectionBased();
    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Method changed:
  old:
    public DigestScheme(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  new:
    deprecated: public DigestScheme(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Method changed:
  old:
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public static java.lang.String createCnonce() throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    public static java.lang.String createCnonce();

  Method changed:
  old:
    public java.lang.String getID();

  new:
    deprecated: public java.lang.String getID();

Class changed: org.apache.commons.httpclient.auth.HttpAuthRealm
  Methods removed:
    public boolean equals(java.lang.Object);
    public int hashCode();
    public java.lang.String toString();

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.auth.HttpAuthRealm extends java.lang.Object
  new:
    deprecated: public org.apache.commons.httpclient.auth.HttpAuthRealm extends org.apache.commons.httpclient.auth.AuthScope
Class changed: org.apache.commons.httpclient.auth.HttpAuthenticator
  Class descriptor changed:
  old:
    public final org.apache.commons.httpclient.auth.HttpAuthenticator extends java.lang.Object
  new:
    deprecated: public final org.apache.commons.httpclient.auth.HttpAuthenticator extends java.lang.Object
  Method changed:
  old:
    public static boolean authenticate(org.apache.commons.httpclient.auth.AuthScheme, org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public static boolean authenticate(org.apache.commons.httpclient.auth.AuthScheme, org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public static boolean authenticateDefault(org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public static boolean authenticateDefault(org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public static boolean authenticateProxy(org.apache.commons.httpclient.auth.AuthScheme, org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public static boolean authenticateProxy(org.apache.commons.httpclient.auth.AuthScheme, org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public static boolean authenticateProxyDefault(org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public static boolean authenticateProxyDefault(org.apache.commons.httpclient.HttpMethod, org.apache.commons.httpclient.HttpConnection, org.apache.commons.httpclient.HttpState) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public static org.apache.commons.httpclient.auth.AuthScheme selectAuthScheme(org.apache.commons.httpclient.Header[]) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  new:
    deprecated: public static org.apache.commons.httpclient.auth.AuthScheme selectAuthScheme(org.apache.commons.httpclient.Header[]) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

Class changed: org.apache.commons.httpclient.auth.MalformedChallengeException
  Methods added:
    public MalformedChallengeException(java.lang.String, java.lang.Throwable);

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.auth.MalformedChallengeException extends org.apache.commons.httpclient.HttpException
  new:
    public org.apache.commons.httpclient.auth.MalformedChallengeException extends org.apache.commons.httpclient.ProtocolException
Class changed: org.apache.commons.httpclient.auth.NTLMScheme
  Methods added:
    public NTLMScheme();
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    deprecated: public static java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public boolean isComplete();
    public boolean isConnectionBased();
    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.auth.NTLMScheme extends org.apache.commons.httpclient.auth.AuthSchemeBase
  new:
    public org.apache.commons.httpclient.auth.NTLMScheme extends java.lang.Object implements org.apache.commons.httpclient.auth.AuthScheme
  Method changed:
  old:
    public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public static java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  new:
    deprecated: public static java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;

  Method changed:
  old:
    public java.lang.String getID();

  new:
    deprecated: public java.lang.String getID();

Class changed: org.apache.commons.httpclient.auth.RFC2617Scheme
  Methods added:
    public RFC2617Scheme();
    deprecated: public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public abstract java.lang.String authenticate(org.apache.commons.httpclient.Credentials, org.apache.commons.httpclient.HttpMethod) throws org.apache.commons.httpclient.auth.AuthenticationException;
    public abstract java.lang.String getSchemeName();
    public abstract boolean isComplete();
    public abstract boolean isConnectionBased();
    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Class descriptor changed:
  old:
    public abstract org.apache.commons.httpclient.auth.RFC2617Scheme extends org.apache.commons.httpclient.auth.AuthSchemeBase
  new:
    public abstract org.apache.commons.httpclient.auth.RFC2617Scheme extends java.lang.Object implements org.apache.commons.httpclient.auth.AuthScheme
  Method changed:
  old:
    public RFC2617Scheme(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  new:
    deprecated: public RFC2617Scheme(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException;

  Method changed:
  old:
    public java.lang.String getID();

  new:
    deprecated: public java.lang.String getID();

Class changed: org.apache.commons.httpclient.cookie.CookiePolicy
  Methods added:
    public static org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String) throws java.lang.IllegalStateException;
    public static void registerCookieSpec(java.lang.String, java.lang.Class);
    public static void unregisterCookieSpec(java.lang.String);

  Fields added:
    public final static java.lang.String BROWSER_COMPATIBILITY = compatibility;
    public final static java.lang.String DEFAULT = default;
    public final static java.lang.String IGNORE_COOKIES = ignoreCookies;
    public final static java.lang.String NETSCAPE = netscape;
    public final static java.lang.String RFC_2109 = rfc2109;

  Method changed:
  old:
    public static org.apache.commons.httpclient.cookie.CookieSpec getCompatibilitySpec();

  new:
    deprecated: public static org.apache.commons.httpclient.cookie.CookieSpec getCompatibilitySpec();

  Method changed:
  old:
    public static int getDefaultPolicy();

  new:
    deprecated: public static int getDefaultPolicy();

  Method changed:
  old:
    public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int);

  new:
    deprecated: public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int);

  Method changed:
  old:
    public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByVersion(int);

  new:
    deprecated: public static org.apache.commons.httpclient.cookie.CookieSpec getSpecByVersion(int);

  Method changed:
  old:
    public static void setDefaultPolicy(int);

  new:
    deprecated: public static void setDefaultPolicy(int);

  Field changed:
  old:
    public final static int COMPATIBILITY = 0;

  new:
    deprecated: public final static int COMPATIBILITY = 0;

  Field changed:
  old:
    public final static int NETSCAPE_DRAFT = 1;

  new:
    deprecated: public final static int NETSCAPE_DRAFT = 1;

  Field changed:
  old:
    public final static int RFC2109 = 2;

  new:
    deprecated: public final static int RFC2109 = 2;

Class changed: org.apache.commons.httpclient.cookie.CookieSpec
  Methods added:
    public abstract boolean domainMatch(java.lang.String, java.lang.String);
    public abstract java.util.Collection getValidDateFormats();
    public abstract boolean pathMatch(java.lang.String, java.lang.String);
    public abstract void setValidDateFormats(java.util.Collection);

Class changed: org.apache.commons.httpclient.cookie.CookieSpecBase
  Methods added:
    public boolean domainMatch(java.lang.String, java.lang.String);
    public java.util.Collection getValidDateFormats();
    public boolean pathMatch(java.lang.String, java.lang.String);
    public void setValidDateFormats(java.util.Collection);

Class changed: org.apache.commons.httpclient.cookie.MalformedCookieException
  Methods added:
    public MalformedCookieException(java.lang.String, java.lang.Throwable);

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.cookie.MalformedCookieException extends org.apache.commons.httpclient.HttpException
  new:
    public org.apache.commons.httpclient.cookie.MalformedCookieException extends org.apache.commons.httpclient.ProtocolException
Class changed: org.apache.commons.httpclient.cookie.NetscapeDraftSpec
  Methods added:
    public boolean domainMatch(java.lang.String, java.lang.String);
    public org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, java.lang.String) throws org.apache.commons.httpclient.cookie.MalformedCookieException;

Class changed: org.apache.commons.httpclient.cookie.RFC2109Spec
  Methods added:
    public boolean domainMatch(java.lang.String, java.lang.String);

Class changed: org.apache.commons.httpclient.methods.EntityEnclosingMethod
  Methods removed:
    deprecated: public EntityEnclosingMethod(java.lang.String, java.lang.String);
    deprecated: public EntityEnclosingMethod(java.lang.String, java.lang.String, java.lang.String);
    public java.io.InputStream getRequestBody();
    public java.lang.String getRequestBodyAsString() throws java.io.IOException;
    protected int getRequestContentLength();

  Methods added:
    protected void addRequestHeaders(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity();
    public java.lang.String getRequestCharSet();
    protected long getRequestContentLength();
    public org.apache.commons.httpclient.methods.RequestEntity getRequestEntity();
    public void setContentChunked(boolean);
    deprecated: public void setRequestContentLength(long);
    public void setRequestEntity(org.apache.commons.httpclient.methods.RequestEntity);

  Method changed:
  old:
    public void setRequestBody(java.io.InputStream);

  new:
    deprecated: public void setRequestBody(java.io.InputStream);

  Method changed:
  old:
    public void setRequestBody(java.lang.String);

  new:
    deprecated: public void setRequestBody(java.lang.String);

  Method changed:
  old:
    public void setRequestContentLength(int);

  new:
    deprecated: public void setRequestContentLength(int);

  Field changed:
  old:
    public final static int CONTENT_LENGTH_AUTO = -2;

  new:
    deprecated: public final static long CONTENT_LENGTH_AUTO = -2;

  Field changed:
  old:
    public final static int CONTENT_LENGTH_CHUNKED = -1;

  new:
    deprecated: public final static long CONTENT_LENGTH_CHUNKED = -1;

Class changed: org.apache.commons.httpclient.methods.ExpectContinueMethod
  Methods removed:
    deprecated: public ExpectContinueMethod(java.lang.String, java.lang.String);
    deprecated: public ExpectContinueMethod(java.lang.String, java.lang.String, java.lang.String);

  Class descriptor changed:
  old:
    public abstract org.apache.commons.httpclient.methods.ExpectContinueMethod extends org.apache.commons.httpclient.methods.GetMethod
  new:
    public abstract org.apache.commons.httpclient.methods.ExpectContinueMethod extends org.apache.commons.httpclient.HttpMethodBase
  Method changed:
  old:
    public boolean getUseExpectHeader();

  new:
    deprecated: public boolean getUseExpectHeader();

  Method changed:
  old:
    public void setUseExpectHeader(boolean);

  new:
    deprecated: public void setUseExpectHeader(boolean);

Class changed: org.apache.commons.httpclient.methods.GetMethod
  Methods removed:
    deprecated: public GetMethod(java.lang.String, java.io.File);
    deprecated: public GetMethod(java.lang.String, java.lang.String);
    deprecated: public GetMethod(java.lang.String, java.lang.String, java.lang.String);
    deprecated: public java.io.File getFileData();
    deprecated: public java.lang.String getTempDir();
    deprecated: public java.lang.String getTempFile();
    deprecated: public boolean getUseDisk();
    protected void readResponseBody(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    deprecated: public void setFileData(java.io.File);
    deprecated: public void setTempDir(java.lang.String);
    deprecated: public void setTempFile(java.lang.String);
    deprecated: public void setUseDisk(boolean);

Class changed: org.apache.commons.httpclient.methods.HeadMethod
  Method changed:
  old:
    public int getBodyCheckTimeout();

  new:
    deprecated: public int getBodyCheckTimeout();

  Method changed:
  old:
    protected void readResponseBody(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException;

  new:
    protected void readResponseBody(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws org.apache.commons.httpclient.HttpException, java.io.IOException;

  Method changed:
  old:
    public void setBodyCheckTimeout(int);

  new:
    deprecated: public void setBodyCheckTimeout(int);

Class changed: org.apache.commons.httpclient.methods.MultipartPostMethod
  Methods removed:
    public MultipartPostMethod(java.lang.String, java.lang.String);
    public MultipartPostMethod(java.lang.String, java.lang.String, java.lang.String);
    protected int getRequestContentLength();

  Methods added:
    protected void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected void addContentTypeRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected long getRequestContentLength() throws java.io.IOException;

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.methods.MultipartPostMethod extends org.apache.commons.httpclient.methods.ExpectContinueMethod
  new:
    deprecated: public org.apache.commons.httpclient.methods.MultipartPostMethod extends org.apache.commons.httpclient.methods.ExpectContinueMethod
Class changed: org.apache.commons.httpclient.methods.OptionsMethod
  Method changed:
  old:
    public boolean needContentLength();

  new:
    deprecated: public boolean needContentLength();

Class changed: org.apache.commons.httpclient.methods.PostMethod
  Methods removed:
    deprecated: public PostMethod(java.lang.String, java.lang.String);
    deprecated: public PostMethod(java.lang.String, java.lang.String, java.lang.String);
    protected void addRequestHeaders(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException;
    protected byte[] generateRequestBody();

  Methods added:
    protected org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity();

Class changed: org.apache.commons.httpclient.methods.TraceMethod
  Method changed:
  old:
    public void recycle();

  new:
    deprecated: public void recycle();

Class changed: org.apache.commons.httpclient.methods.multipart.FilePart
  Fields removed:
    protected final static byte[] FILE_NAME_BYTES;

Class changed: org.apache.commons.httpclient.methods.multipart.Part
  Methods added:
    public static long getLengthOfParts(org.apache.commons.httpclient.methods.multipart.Part[], byte[]) throws java.io.IOException;
    protected byte[] getPartBoundary();
    public boolean isRepeatable();
    public static void sendParts(java.io.OutputStream, org.apache.commons.httpclient.methods.multipart.Part[], byte[]) throws java.io.IOException;

  Method changed:
  old:
    public static java.lang.String getBoundary();

  new:
    deprecated: public static java.lang.String getBoundary();

  Field changed:
  old:
    protected final static java.lang.String BOUNDARY = ----------------314159265358979323846;

  new:
    deprecated: protected final static java.lang.String BOUNDARY = ----------------314159265358979323846;

  Field changed:
  old:
    protected final static byte[] BOUNDARY_BYTES;

  new:
    deprecated: protected final static byte[] BOUNDARY_BYTES;

Class changed: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory
  Methods added:
    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int, org.apache.commons.httpclient.params.HttpConnectionParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException;

Class changed: org.apache.commons.httpclient.protocol.Protocol
  Method changed:
  old:
    public Protocol(java.lang.String, org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory, int);

  new:
    deprecated: public Protocol(java.lang.String, org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory, int);

Class changed: org.apache.commons.httpclient.protocol.ProtocolSocketFactory
  Methods added:
    public abstract java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int, org.apache.commons.httpclient.params.HttpConnectionParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException;

Class changed: org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory
  Methods added:
    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int, org.apache.commons.httpclient.params.HttpConnectionParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException;

Class changed: org.apache.commons.httpclient.util.DateParser
  Methods added:
    public static java.util.Date parseDate(java.lang.String, java.util.Collection) throws org.apache.commons.httpclient.util.DateParseException;

  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.util.DateParser extends java.lang.Object
  new:
    deprecated: public org.apache.commons.httpclient.util.DateParser extends java.lang.Object
Class changed: org.apache.commons.httpclient.util.EncodingUtil
  Methods added:
    public static byte[] getAsciiBytes(java.lang.String);
    public static java.lang.String getAsciiString(byte[]);
    public static java.lang.String getAsciiString(byte[], int, int);
    public static byte[] getBytes(java.lang.String, java.lang.String);
    public static java.lang.String getString(byte[], int, int, java.lang.String);
    public static java.lang.String getString(byte[], java.lang.String);

Class changed: org.apache.commons.httpclient.util.URIUtil
  Methods removed:
    deprecated: public static java.lang.String toDocumentCharset(java.lang.String) throws org.apache.commons.httpclient.URIException;
    deprecated: public static java.lang.String toDocumentCharset(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException;
    deprecated: public static java.lang.String toProtocolCharset(java.lang.String) throws org.apache.commons.httpclient.URIException;
    deprecated: public static java.lang.String toProtocolCharset(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException;
    deprecated: public static java.lang.String toUsingCharset(java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException;

Class changed: org.apache.commons.httpclient.util.URIUtil.Coder
  Class descriptor changed:
  old:
    public org.apache.commons.httpclient.util.URIUtil.Coder extends org.apache.commons.httpclient.URI
  new:
    deprecated: public org.apache.commons.httpclient.util.URIUtil.Coder extends org.apache.commons.httpclient.URI
  Method changed:
  old:
    public static java.lang.String decode(char[], java.lang.String) throws org.apache.commons.httpclient.URIException;

  new:
    deprecated: public static java.lang.String decode(char[], java.lang.String) throws org.apache.commons.httpclient.URIException;

  Method changed:
  old:
    public static char[] encode(java.lang.String, java.util.BitSet, java.lang.String) throws org.apache.commons.httpclient.URIException;

  new:
    deprecated: public static char[] encode(java.lang.String, java.util.BitSet, java.lang.String) throws org.apache.commons.httpclient.URIException;

API diff generated by JarDiff http://www.osjava.org/jardiff/

-------------------
Changes since Release Candidate 4:

 * 37526 - Fixed incorrect processing of HTTP parameters with an 
           empty name
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 37256 - Fixed bug causing MultipartRequestEntity to miscalculate the 
           total content length if any of the parts returns a negative
           content length value
           Contributed by Loïc Péron <loic.peron at bigfoot.com>

 * 37197 - Preemptive auth flag no longer disregarded when tunneling 
           SSL connections via a proxy
           Contributed by wynand <wolman at gmail.com>

 * 37154 - UsernamePasswordCredentials.equals(null) no longer causes NPE
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 37129 - HttpConnection changed to use a protocol socket factory registered 
           for 'http' protocol instead of DefaultProtocolSocketFactory when 
           connecting to a proxy to establish a secure tunnel
           Contributed by Oleg Kalnichevski <olegk at apache.org>

Release 3.0 Release Candidate 4
-------------------
Changes since Release Candidate 3:

 * 36882 - Max connections per host setting did not work
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 36791 - Fixed HttpConnection#isOpen flag concurrency problem
           Contributed by Jean-Marie White <jmwhite5 at yahoo.com>

 * 36339 - Request is no longer retried if preemptive authentication fails
           and Basic is the only supported authentication scheme advertised
           by the target server
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 36372 - nonce-count in digest auth should not be quoted
           Contributed by Ortwin Glueck <oglueck at apache.org>
           
 * 36369 - Custom Proxy-Connection header no longer gets overwritten
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 36595 - Do not attempt to retry aborted methods
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 36140 - ParameterParser changed to correctly differentiate between empty and 
           null (no value) parameters
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 35085 - HTTP 204 "NO CONTENT" response no longer results in dropped 
           connection.
           Contributed by Ian Bray <Ian.Bray at logicacmg.com>

 * 35944 - Connection always gets released back to the pool even if an unchecked 
           exception is thrown in HttpMethod#releaseConnection method.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 35642 - Do not retry if host is unreachable. This ensures a connection timeout
           will be obeyed.
           Contributed by Ortwin Glueck <oglueck at apache.org>
           
 * 35815 - SimpleHttpConnectionManager now logs warnings when it detects it is
           being used incorrectly. 
           Contributed by Michael Becke <mbecke at apache.org>

Release 3.0 Release Candidate 3
-------------------
Changes since Release Candidate 2:

 * 35365 - Added #hashCode and #equals methods for Credentials implementations
           Contributed by Eric Johnson <eric at tibco.com>

 * 35322 - Stale connection check now correctly works with IBM JSSE/JRE 1.4.x
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 35225 - Fixed a major problem with the browser compatibility policy leaking cookies 
           to 3rd party domains (.mydomain.com -> .notmydomain.com)
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 35328 - DateUtil#formatDate changed to US locale instead of system default
           Contributed by Yannick <yannick at meudal.net>

 * 34960 - DigestScheme changed to take into account charset attribute when available 
           (Known to be used by Microsoft implementation of the Digest auth scheme)
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 35148 - HttpClient now correctly handles relative URIs beginning with a colon.
           Contributed by Gordon Mohr <gojomo at archive.org>

 * 34961 - HttpClient now correctly handles escaped characters in HTTP header elements
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 34780 - HttpClient now always overrides the host of HostConfiguration if an absolute 
           request URI is given
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 34740 - Connection with the proxy is not reopened if an proxy auth failure occurs 
           while SSL tunnel is being established
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 34721 - Virtual host setting is now correctly applied when parsing and matching 
           cookies
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 34583 - DateUtil.formatDate() changed to use GMT instead of the default timezone
           Contributed by Fred Bierhaus <fred.bierhaus at vodafone.com>

 * 34459 - Always use the chunk encoding when request content length cannot be 
           determined (is negative)
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 34427 - Fixed the bug causing an IllegalStateException in AuthState
           triggered by the combination of preemptive proxy authentication 
           and a cross-site redirect
           Contributed by Oleg Kalnichevski <olegk at apache.org>

Release 3.0 Release Candidate 2
-------------------
Changes since Release Candidate 1:

 * 34255 - Preemptive authentication no longer causes NTLM auth scheme to fail
           Contributed by Michael Becke <mbecke at apache.org>

 * 33720 - Fixed the problem with HttpMethod#getURI applying URL escaped encoding to
           already encoded URIs
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 34262 - Fixed broken handling of responses that may not include an entity body
           (status code 204, 304)
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * ----- - Fixed broken InputStreamRequestEntity#isRepeatable method
           Contributed by Matthew-J Watson <matthew-j.watson at db.com>

 * 33677 - Fixed the bug preventing the HTTP retry handler from handling
           ConnectionExceptions
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 33988 - All classes overriding Object#hashCode & Object#equals methods have been reviewed 
           regarding their hashCode/equals contract compliance
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 33947 - Exception in HttpConnection because of unchecked buffer size
           Contributed by Ortwin Glueck <oglueck at apache.org>
 
 * 33856 - Fixed the problem with the credential-charset parameter not having an effect on
           the encoding of the NTLM credentials
           Contributed by Oleg Kalnichevski <olegk at apache.org>
 
 * 33541 - Fixed the problem with host level parameters having no effect on HTTP CONNECT 
           methods
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 33468 - HttpClient no longer flushes the request line and request headers prior to 
           writing the request body if the 'expect: continue' handshake is not used
           Contributed by Peter Tolmachov <peter.tolmachov at agfa.com>

Release 3.0 Release Candidate 1
-------------------
Changes since Beta 1:

 * 32833 - Cookie with domain .mydomain.com were not sent to host mydomain.com
           in the browser compatibility mode
           Contributed by David D. Kilzer <ddkilzer at kilzer.net>

 * 33021 - Fixed the bug causing the circular redirect if different query parameters
           are used in the redirect location.
           Contributed by Ilya Kharmatsky <ilyak at mainsoft.com>

 * 32955 - Fixed the bug effectively disabling the stale connection check
           Contributed by Oliver Koell <oko at newbase.de>

 * 32835 - The two digit year greater than 20 no longer causes the cookie expiry date 
           to be interpreted as a date between 1920 and 1999
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 32607 - Fixed the problem with ReflectionSocketFactory ignoring the local address of 
           HostConfiguration
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 32409 - HttpState now has new methods for clearing all cookies and credentials.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 32558 - Fixed retry count bug in DefaultMethodRetryHandler
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 32333 - Connection is now closed upon "Connection: close" request,
           if the server does not include an explicit connection 
           directive in the response.
           Contributed by Oleg Kalnichevski <olegk at apache.org>
 
 * 32765 - Fixed NullPointerException in HostConfiguration.setHost(Sting)
           Contributed by Stuart Herring <apache at stuartherring.com>

 * 32742 - Fixed the problem with SO_TIMEOUT parameter having no effect
           on the method level.
           Contributed by Ilya Kharmatsky <ilyak at mainsoft.com>

Release 3.0 Beta 1
-------------------
Changes since Alpha 2:

 * 31929 - Added support for formatting dates. Deprecated DateParser in 
           favor of DateUtil.
           Contributed by Michael Becke <mbecke at apache.org>

 * ----- - HostConfiguration.isHostSet() and Hostconfiguration.isProxySet() have been 
           deprecated.

 * 31981 - Fixed the bug causing an infinite loop in HttpMethodDirector
           when using SSL + proxy + host auth + keep alive off
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 31607 - Catch SocketTimeoutException not InterruptedIOException when running 
           in JRE >=1.4
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 31471 - HostConfiguration refactored
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * ----- - ContentLengthInputStream no longer supports mark() & reset() methods. Old 
           broken implementation removed.
           Contributed by Eric Johnson <eric at tibco.com>

Release 3.0 Alpha 2
-------------------
Changes since Alpha 1:

 * 10793 - Configurable default headers
           Contributed by Oleg Kalnichevski <olegk at apache.org>
           
 * 30652 - Configurable SO_LINGER
           Contributed by Oleg Kalnichevski <olegk at apache.org>
           
 * 31163 - CookieSpec classes made stateful
           Contributed by Oleg Kalnichevski <olegk at apache.org>
           
 * 21329 - Added input buffering to improve performance
           Contributed by Bjarne Rasmussen <brasmussen at novell.com>

 * 29897 - Connection output buffer is set to a value not greater than 2k
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 29636 - MultiThreadedHttpConnectionManager now support configuring the maximum
           number of connections on a per host basis.
           Contributed by Michael Becke <mbecke at apache.org>

 * 29874 - Deprecated old HTTP method retry handler based on HttpRecoverableException
           and replaced it with a new one that acts upon plain IOExceptions
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 29883 - Fixed handling of multi-byte characters in the StringRequestEntity class
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 29383 - Added method to delete closed connections from the connection pool
           Contributed by Michael Becke <mbecke at apache.org>

 * 29549 - Split wire log into header and body parts
           Contributed by Michael Becke <mbecke at apache.org>

 * 29540 - Fixed credentials scope matching algorithm in HttpState#matchCredentials.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 29439 - Cleaner interface to define authentication scope, handle credentials in HttpState.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 29377 - Cookies with names containing blanks or starting with $ rejected by RFC2109 spec only.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

Release 3.0 Alpha 1
-------------------
Changes on the CVS trunk:

 * 29265 - HttpConnection.isOpen() no longer logs closed connections as stale.

 * 28645 - Moved/added content type handling to the RequestEntity.
           Contributed by Michael Becke <mbecke at apache.org>, Oleg Kalnichevski <olegk at apache.org>

 * 20288 - Added ability to abort execution of HTTP methods
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 24154 - Socket timeout can be specified at the connection manager, connection or method level
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 16124 - HTTP protocol version can be specified at the client, host or method level
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 28728 - HttpUrl now accepts unescaped passwords
           Contributed by Michael Becke <mbecke at apache.org>

 * 28626 - Fixed ArrayIndexOutOfBoundsException in HttpStatus.getStatusText()
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 26070 - Added support for streaming entities
           Contributed by Michael Becke <mbecke at apache.org>

 * 28566 - CookieSpec interface extended to expose path & domain matching methods; browser compatibility domain
           matching algorithm modified to mimic the (mis-)behavior of common browsers
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 25372 - Added support for closing idle connections
           Contributed by Michael Becke <mbecke at apache.org>, Oleg Kalnichevski <olegk at apache.org>

 * 28322 - Redesign of connect timeout logic; Added support for JDK1.4 connect timeout through reflection
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 28151 - Added stand-alone support for tunneled HTTP proxies via the ProxyClient
           Contributed by Michael Sample <m_sample at canada.com>, Michael Becke <mbecke at apache.org>

 * 21216 - Fixed the problem of redirect 302 to the same URL causing max redirects exception: circular redirect 
           check added; the circular redirect check is on per default and in lenient mode, is off in strict mode
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 27589 - Added MultiThreadedHttpConnectionManager shutdown() and shutdownAll()
           Contributed by Michael Becke <mbecke at apache.org>
 
 * 25529 - Redesign of HTTP authentication framework
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * Better implementation of ChunkedOutputStream: writes are buffered to an internal buffer (2048 default size); 
   chunks are guaranteed to be at least as large as the buffer size (except for the last chunk) 
           Contributed by Mohammad Rezaei <mohammad.rezaei at gs.com>, Goldman, Sachs & Co

 * HttpMethod#getResponseBody & HttpMethod#getResponseBodyAsString changed to propagate IOException to the caller 
   instead of logging and discarding it
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 10794 - Added interactive authentication support; Authentication realm key is now comprised of host name, port, 
           realm name and authentication type
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 15297 - Added ability to perform alternate authentication
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 16881 - HttpClient made dependent on Commons-codec to perform Base64 and URL encoding/decoding
           Contributed by Michael Becke <mbecke at apache.org>, Oleg Kalnichevski <olegk at apache.org>

 * 24560 - Fixed the problem of HttpClient looping endlessly while trying to retrieve status line
           Contributed by Christian Kohlschuetter <ck at rrzn.uni-hannover.de>

 * 24671 - Added support for configuring charsets in credentials and HTTP headers
           Contributed by Michael Becke <mbecke at apache.org>

 * Plug-in mechanism for authentication modules
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * Added infrastructure to create test cases that involve use of a proxy
           Contributed by Ortwin Glueck <oglueck at apache.org>

 * UserNamePasswordCredentials & NTCredentials made immutable
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 24869 - DigestScheme now only accepts a challenge if all fields required by RFC 2617 are present
           Contributed by Ortwin Glueck <oglueck at apache.org>

 * New framework for server based tests
           Contributed by Christian Kohlschuetter <ck at rrzn.uni-hannover.de>, Ortwin Glueck <oglueck at apache.org>

 * Socket input stream now wrapped with a wrapper class that re-throws certain type of generic IO exceptions as HttpClient
   specific exceptions. Improved handling of 'used' connections (known to have successfully completed an I/O operation).
           Contributed by Oleg Kalnichevski <olegk at apache.org>
 
 * 24012 - Added IgnoreCookiesSpec.
           Contributed by Michael Becke <mbecke at apache.org>

 * 24018 - Cookie and Authorization headers can now be set manually.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 21151 - Cookie specification plug-in mechanism
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * Reworked DigestScheme: the qop Parameter is parsed correctly and not just ignored; missing qop is handled correctly
           Contributed by Ortwin Glueck <oglueck at apache.org>

 * 10790 - Implemented granular non-standards configuration and tracking.
           Contributed by Oleg Kalnichevski <olegk at apache.org>, Michael Becke <mbecke at apache.org>,
           Roland Weber <rolweber at de.ibm.com>, Ortwin Glueck <oglueck at apache.org>, 
           Adrian Sutton <adrian.sutton at ephox.com>

 * 15435 - Implemented new preference architecture.
           Contributed by Oleg Kalnichevski <olegk at apache.org>, Michael Becke <mbecke at apache.org>,
           Roland Weber <rolweber at de.ibm.com>, Ortwin Glueck <oglueck at apache.org>, 
           Adrian Sutton <adrian.sutton at ephox.com>

 * Deprecated the use of system properties: 'httpclient.useragent', 
   'httpclient.authentication.preemptive'. 

 * Refactored NameValuePair#equals method.
           Contributed by Ortwin Glueck <oglueck at apache.org>

 * 16729 - Refactored retry/redirect/authentication logic.
           Contributed by Michael Becke <mbecke at apache.org>

 * Added support for disabling HttpConnection.isStale()
           Contributed by Michael Becke <mbecke at apache.org>

 * 10791 - Improved HTTP Version configuration and tracking.
           Contributed Oleg Kalnichevski <olegk at apache.org>, Laura Werner <laura at lwerner.org>, 
           Michael Becke <mbecke at apache.org>

 * 21880 - Content-Length & Transfer-Encoding request headers formerly set by abstract 
           HttpMethodBase class are handled by entity enclosing methods.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 17947 - HttpMethod#setURI method added.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 19618 - URI constructors refactored.
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 11240 - Fixed the problem of cookies with ',' in the value string not parsed correctly in some cases
           Contributed by Oleg Kalnichevski <olegk at apache.org>

 * 21323 - Support for large(long) content added
           Contributed by Michael Becke <mbecke at apache.org>

 * 19868 - Exception handling framework reworked.
           Contributed by Adrian Sutton <adrian.sutton at ephox.com>, Laura Werner <laura at lwerner.org>, 
           Oleg Kalnichevski <olegk at apache.org>, Michael Becke <mbecke at apache.org>

 * 21210 - Header parser completely rewritten.
           Improved handling of Netscape draft compatible cookies
           Contributed by Oleg Kalnichevski <olegk at apache.org>

Release 2.0.2
-------------------
Changes since Release 2.0.1

 * ContentLengthInputStream no longer supports mark() & reset() methods. 

 * 21329 - Added input buffering to improve performance

Release 2.0.1
-------------------
Changes since Release 2.0

 * 30175 - Fixed StringIndexOutOfBoundsException in StatusLine

 * 29897 - Connection output buffer is set to a value not greater than 2k

 * 29549 - Split wire log into header and body parts

 * 29377 - Cookies with names containing blanks or starting with $ rejected by RFC2109
   spec only.

 * 29265 - HttpConnection.isOpen() no longer logs closed connections as stale.

 * 28728 - HttpUrl now accepts unescaped passwords

 * 28626 - Fixed ArrayIndexOutOfBoundsException in HttpStatus.getStatusText()

 * 27589 - Added MultiThreadedHttpConnectionManager shutdown() and shutdownAll().
 
 * HttpMethod#recycle() has been deprecated.

Release 2.0
-------------------
Changes since Release Candidate 3:

 * 26500 - Socket timeout is now correctly set on open connections
 
 * 26328 - Fixed getScheme() and getPort() returning wrong defaults for HttpsURL

 * 26139 - Fixed possible connection leak caused by lack of equals() and hashCode() on protocol
   socket factories
   
 * 26688 - Fixed the problem with HttpURL creating wrong authority String when user info is changed

Release 2.0 Release Candidate 3
-------------------
Changes since Release Candidate 2:

 * HTTP status line parser changed to be more robust when dealing with non-compliant 
   HTTP responses (leading blanks before 'HTTP' signature).

 * Fixed NPE in HttpMethodBase#responseBodyConsumed().

 * 24309 - Changed MultiThreadedHttpConnectionManager to move to a single connection 
   GC thread.  Fixed memory and thread leaks.

 * 24327 - Fixed a bug where HttpClient did not reset the 'force-close connection' 
   flag, when an HTTP method was automatically retried (for instance, when automatically 
   handling an authentication challenge).

 * 24352 - Fixed the bug causing basic authentication via NLTM Proxy to fail.

 * 25370  - Connections are now closed and released automatically when an unrecoverable 
   exception occurs in HttpMethodBase.processRequest().

 * 23866 - Fixed possible uncaught IllegalArgumentException in Cookie parsing.

 * 25264 - Added support for cookies with a domain attribute '.domain.com' issued by 
   host 'domain.com' in the browser compatibility mode. Even though the cookie violates 
   RFC 2109 it still gets accepted by mainstream browsers (tested with Mozilla Firebird and IE).

 * 24869 - Changed DigestScheme to only accept a challenge if all fields required 
   by RFC 2617 are present.

 * 24671 - Added ISO-8859-1 support for digest authentication passwords, and basic authentication 
   user names and passwords.

 * Javadoc enhancements.

Release 2.0 Release Candidate 2
-------------------
Changes since Release Candidate 1:

 * Javadoc enhancements.

 * 23284 - Fixed bug with URI.isIPv4address(). 

 * 22969 - PostMethod#setParameter fixed to correctly overwrite existing parameters. 

 * 22970 - Fixed bug with PostMethod#removeParameter return value. 

 * Improved compliance to RFC 2617
 
 * Added support for digest auth MD5-sess. 

 * 22655 - Added support for stale digest nonce values. 

 * 22968 - HttpConnection.isResponseAvailable() made a little more robust, particularly when 
   used by HeadMethod. 

 * 22941 - Switched the order in which socket streams are closed: output stream closed first,
   followed by input stream. 

 * Added debugging for connection reclaiming. 

 * Removed JCE initialization code specific to the Sun's implementation. 

 * Fixed problem of Basic, Digest & NTLM authentication schemes under certain circumstances 
   leaking passwords in clear text to the DEBUG log. 

 * Fixed the problem with incorrect selection of the proxy authentication realm. 

 * Changed URI.normalize() to ignore relative path normalization. 

Release 2.0 Release Candidate 1
-------------------
Changes since Release 2.0 Beta 2:

 * Option to disable 'stale' connection check that may lead to a slight
   performance improvement at the cost of reduced reliability

 * Improved debug logging in multi-threaded connection manager

 * URI.normalize() no longer has an effect on relative URIs.

 * 21532 - Removed use of sun.* class in URI.java 

 * 20481 - Changed query param encoding to UTF-8.

 * 21378 - Multiple transfer encoding headers are now handled properly. Non chunked transfer 
   encodings are now handled correctly.

Release 2.0 Beta 2
-------------------
Changes since Release 2.0 Beta 1:

 * 20240 - Cookies with null path are no longer rejected in the
   browser compatibility mode.

 * 20481 - Query parameters set via HttpMethodBase.setQueryString(NameValuePair[])
   now correctly use 'application/x-www-form-urlencoded' encoding.

 * 20481 - POST method correctly applies 'application/x-www-form-urlencoded'
   encoding.

 * 20569 - Duplicate connection headers are now handled.

 * 20646 - Fixed NTLM proxy authentication via SSL. 

 * 20665 - Changed URI to correctly handle path resolution according to 
   http://www.apache.org/~fielding/uri/rev-2002/issues.html.  In 
   particular dot-segments are removed when not necessary.

 * 20938 - Connections are now closed when the request is missing a content 
   length and is not chunked.

 * 20942 - Requests with DIGEST authentication are now correctly handled 
   when redirected.

 * 21130 - DEFAULT_MAX_HOST_CONNECTIONS and DEFAULT_MAX_TOTAL_CONNECTIONS are
   now public in MultiThreadedHttpConnectionManager.

 * 21201 - URIs are now correctly rebuilt following a call to URI.normalize().

 * 21202 - WireLogInputStream.read(byte[]) now logs the correct number of bytes.

 * Fixed path parsing in RFC2109 cookie spec.

 * Fixed possible NPE when reading an empty response body.

 * The various to*Charset() methods of URIUtil have been deprecated.

Release 2.0 Beta 1
-------------------
Changes since Release 2.0 Alpha 3:

 * Changed HttpConnection to use socket timeout instead of busy 
   waiting while expecting input.

 * Added a getResponseContentLength() method to HttpMethod.

 * Changed HttpClient to accept correctly encoded URLs instead of 
   attempting to encode them within HttpClient.

 * 'Expect: 100-continue' logic factored out into an abstract 
   ExpectContinueMethod class

 * 'Expect: 100-Continue' handshake disabled per default, as it may not work 
   properly with older HTTP/1.0 servers or proxies.

 * Reengineered authentication code.  This includes a fix for 
   HttpClient continually attempting to authenticate to digest realms and 
   provides for better future extensibility.

 * Authenticator class deprecated

 * Improved user documentation and example code.

 * Added ability to differentiate between different hosts using the 
   same realm names.

 * Added support for specifying a virtual host name to use.

 * Fixed problem with half-closed connections causing a 
   HttpRecoverableException to be thrown when HttpClient attempts to read 
   from a socket.

 * Improved reliability with the HEAD method and servers that 
   incorrectly include a response body.

 * Improved support for connection keep-alive when communicating via a proxy

 * Added an override of HttpClient.executeMethod that lets the
   caller specify an HttpState object.

 * HttpConnectionManager is now a property of the HttpClient class, 
   not of the HttpState class

 * Added ability to specify the local address that HttpClient should 
   create connections from.


Release 2.0 Alpha 3
-------------------
Changes since Release 2.0 Alpha 2:

 * Abstract EntityEnclosingMethod class has been introduced to encapsulate
   common behaviour of all entity enclosing methods

 * "Expect: 100-continue" handshake support added for POST, PUT & multipart POST

 * Added support for chunked requests for POST and PUT.

 * Added support for 303 See Other redirections.

 * Changed input and output streams to use buffering to improve performance.

 * Improved handling of multivalue headers. Order is now preserved and 
   convenience methods have been added to access each value.

 * In non-strict mode each cookie sent with the request is put on a separate 
   request header. In strict mode all cookies are crammed into one request header, 
   as before.

 * ResponseInputStream class deprecated.

 * RequestOutputStream class deprecated.

 * Custom character set can be specified for all multipart classes. 

 * Custom content type can be specified for FilePart derived multipart classes.

 * The useDisk methods in GetMethod class deprecated.


Release 2.0 Alpha 2
------------------
Changes since Release 2.0 Alpha 1:

 * Mavenized builds.
 
 * Digest authentication.  NTLM authentication.
 
 * Multipart post.
 
 * Added a StatusLine class to manage the status line of a
   http response.

 * Added ability to cusomize SocketFactory for http and https. 
   New Protocol class to allow for more protocols than just http/s.

 * Removed the HttpMultiClient, added multi-thread support to 
   HttpClient.
 
 * Revamp the streaming policy.  Added AutoCloseInputStream,
   ChunkedInputStream, ChunkedOutputStream, ContentLengthInputStream,
   ResponseConsumedWatcher
 
 * Commons Logging.  Dependancy on the commons-logging.jar
 
 * Added httpclient.util package.  Move Base64 and URIUtil classs 
   into util.

 * Added a HttpURLConnection wrapper.  Allows for wrapping 
   HttpClient into the java standard library.  Partial support only.

 * Added httpclient.cookie package.  Complete overhaul of cookie
   handling.  Allows for user specified CookiePolicy and 
   various cookie specification classes.
  
 * Removed previously deprecated Cookie.createCookieHeader(String,
   String,boolean,Cookie[]) method (port number is required for
   future compatibility).

 * Also removed Cookie.createCookieHeader(String,String,Cookie[])
   method, which should have been deprecated (port number is
   required for future compatibility)

 * Renamed HttpMethod.followRedirects to getFollowRedirects,
   for consistency (and made the corresponding change to
   HttpMethodBase)

