/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mars.water.options;

import mars.water.WaterGridFilter;
import mars.water.WaterState;

final class ReflectionPanel extends javax.swing.JPanel {

    private final ReflectionOptionsPanelController controller;
    private WaterState state;
    private WaterGridFilter filter;

    ReflectionPanel(ReflectionOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        while (WaterState.getInstance() == null);
        state = WaterState.getInstance();
        filter = state.getWaterFilter();
        mapSize.setText(String.valueOf(filter.getReflectionMapSize()));
        displacement.setText(String.valueOf(filter.getReflectionDisplace()));
        specular.setSelected(filter.isUseSpecular());
        shiny.setText(String.valueOf(filter.getShininess()));
        sunScale.setText(String.valueOf(filter.getSunScale()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mapSize = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        displacement = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        specular = new javax.swing.JCheckBox();
        shiny = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        sunScale = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();

        mapSize.setText(org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.mapSize.text")); // NOI18N
        mapSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapSizeActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.jLabel1.text")); // NOI18N

        displacement.setText(org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.displacement.text")); // NOI18N
        displacement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displacementActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(specular, org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.specular.text")); // NOI18N
        specular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specularActionPerformed(evt);
            }
        });

        shiny.setText(org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.shiny.text")); // NOI18N
        shiny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shinyActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.jLabel3.text")); // NOI18N

        sunScale.setText(org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.sunScale.text")); // NOI18N
        sunScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sunScaleActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ReflectionPanel.class, "ReflectionPanel.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shiny, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sunScale, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mapSize, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displacement, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(specular))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mapSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displacement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shiny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sunScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void displacementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displacementActionPerformed
        filter.setReflectionDisplace(Float.parseFloat(displacement.getText()));
    }//GEN-LAST:event_displacementActionPerformed

    private void specularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specularActionPerformed
        filter.setUseSpecular(specular.isSelected());
    }//GEN-LAST:event_specularActionPerformed

    private void shinyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shinyActionPerformed
        filter.setShininess(Float.parseFloat(shiny.getText()));
    }//GEN-LAST:event_shinyActionPerformed

    private void sunScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sunScaleActionPerformed
        filter.setSunScale(Float.parseFloat(sunScale.getText()));
    }//GEN-LAST:event_sunScaleActionPerformed

    private void mapSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapSizeActionPerformed
        filter.setReflectionMapSize(Integer.parseInt(mapSize.getText()));
    }//GEN-LAST:event_mapSizeActionPerformed

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(ReflectionPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(ReflectionPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(ReflectionPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(ReflectionPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField displacement;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JFormattedTextField mapSize;
    private javax.swing.JFormattedTextField shiny;
    private javax.swing.JCheckBox specular;
    private javax.swing.JFormattedTextField sunScale;
    // End of variables declaration//GEN-END:variables
}
