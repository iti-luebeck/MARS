/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.mars.auvtree;

import org.mars.auvtree.nodes.RootNode;
import java.awt.BorderLayout;
import java.awt.Component;
import java.util.Set;
import javax.swing.ActionMap;
import mars.MARS_Main;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.BeanTreeView;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;
import mars.auv.AUV_Manager;
import mars.core.CentralLookup;
import org.openide.explorer.ExplorerUtils;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;

/**
 * Top component which displays something.
 */
@TopComponent.Description(
        preferredID = "AUVTreeTopComponent",
        iconBase = "org/mars/auvtree/yellow_submarine.png", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "mars.module.auvEditor.AUVTreeTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_AUVTreeAction",
        preferredID = "AUVTreeTopComponent"
)
@Messages({
    "CTL_AUVTreeAction=AUVTree",
    "CTL_AUVTreeTopComponent=AUVTree",
    "HINT_AUVTreeTopComponent=This is an AUVTree window"
})

public final class AUVTreeTopComponent extends TopComponent implements LookupListener, ExplorerManager.Provider {

    private Lookup.Result<MARS_Main> result = null;
    private AUV_Manager auv_manager = null;
    private final ExplorerManager mgr = new ExplorerManager();
    private final BeanTreeView bTV = new BeanTreeView();

    public AUVTreeTopComponent() {
        initComponents();
        
        setIcon(TreeUtil.getImage("yellow_submarine.png"));
        setName("AUVTree");
        setDisplayName("AUVTree");
        ActionMap actionMap = getActionMap();
        
        //enable global delete
        actionMap.put("delete", ExplorerUtils.actionDelete(mgr, true));
        
        // associate lookup with explorer manager
        associateLookup(ExplorerUtils.createLookup(mgr, actionMap));
        setLayout(new BorderLayout());
        bTV.setRootVisible(false);
        bTV.setDropTarget(false);
        add(bTV, BorderLayout.CENTER);
    }

    /**
     * Uses lookup to get auv's out of mars. Creates a root node of auv's are
     * detected.
     */
    private void getAUVs() {
        Lookup.Template template = new Lookup.Template(AUV_Manager.class);
        CentralLookup cl = CentralLookup.getDefault();
        result = cl.lookup(template);
        if (auv_manager == null) {// try to get mars, else its the listener
            auv_manager = cl.lookup(AUV_Manager.class);
            Set<String> auvNames = auv_manager.getAUVs().keySet();
            mgr.setRootContext(new RootNode(auvNames));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        Lookup.Template template = new Lookup.Template(AUV_Manager.class);
        CentralLookup cl = CentralLookup.getDefault();
        result = cl.lookup(template);
        result.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        result.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return mgr;
    }

    @Override
    public void resultChanged(LookupEvent ev) {
        getAUVs();
    }
}
