/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mars.gui.options;

import mars.MARS_Settings;
import mars.core.CentralLookup;
import mars.states.SimState;
import org.openide.explorer.propertysheet.PropertySheet;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Node;

final class PhysicalPanel extends javax.swing.JPanel {

    private final PhysicalOptionsPanelController controller;
    private final PropertySheet ps = new PropertySheet();

    PhysicalPanel(PhysicalOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
        this.add(ps);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(PhysicalPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(PhysicalPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        CentralLookup cl = CentralLookup.getDefault();
        SimState state = cl.lookup(SimState.class);
        MARS_Settings settings = state.getMARSSettings();
        AbstractNode abstractNode = new SettingsNode(settings, "environment");
        Node[] nodes = new Node[1];
        nodes[0] = abstractNode;
        ps.setNodes(nodes);
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(PhysicalPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(PhysicalPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
